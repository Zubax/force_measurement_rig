# --------------------------------------------------  PYTEST  --------------------------------------------------
[tool.pytest.ini_options]
testpaths        = "src"
python_files     = "*.py"
log_level        = "DEBUG"
log_cli_level    = "WARNING"
log_cli          = true
log_file         = "pytest.log"
addopts          = "--doctest-modules -v"

# --------------------------------------------------  COVERAGE  --------------------------------------------------
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "assert False",
]

# --------------------------------------------------  MYPY  --------------------------------------------------
[tool.mypy]
warn_return_any         = true
warn_unused_configs     = true
disallow_untyped_defs   = true
check_untyped_defs      = true
no_implicit_optional    = true
warn_redundant_casts    = true
warn_unused_ignores     = true
show_error_context      = true
mypy_path = []

[[tool.mypy.overrides]]
module = [
    "serial",
]
ignore_missing_imports = true

# --------------------------------------------------  PYLINT  --------------------------------------------------
[tool.pylint.MASTER]
fail-under = 9.0

[tool.pylint.'MESSAGES CONTROL']
confidence = "UNDEFINED"  # Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
disable = [
    "cyclic-import",
    "useless-import-alias",
    "import-outside-toplevel",
    "fixme",
    "inconsistent-return-statements",
    "unbalanced-tuple-unpacking",
    "no-name-in-module",
    "superfluous-parens",
    "unsubscriptable-object",
    "too-few-public-methods",
    "import-error",
    "no-self-use",
    "multiple-statements",
    "arguments-differ",
    "too-many-statements",
    "useless-super-delegation",
    "too-many-instance-attributes",
    "too-many-public-methods",
    "consider-using-f-string",
    "unspecified-encoding",
    "use-implicit-booleaness-not-comparison",
    "too-many-return-statements",  # Already covered by the branch limit.
]

[tool.pylint.REPORTS]
output-format = "colorized"

[tool.pylint.DESIGN]
max-branches = 20
max-locals = 20

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint.BASIC]
bad-names = []
variable-rgx = "[a-z_][a-z0-9_]*"

# --------------------------------------------------  BLACK  --------------------------------------------------
[tool.black]
line-length = 120
target-version = ['py311']
include = '''
(src/.*\.pyi?$)
|
(noxfile.py$)
'''
